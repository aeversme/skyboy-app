name: Build and push Docker image

on:
  workflow_call:
    inputs:
      bucket_name:
        required: true
        type: string
    secrets:
      access_key_id:
        required: true
      ecr_registry:
        required: true
      secret_access_key:
        required: true
      region:
        required: true

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Run app_files script
        env:
          TOKEN: ${{ secrets.MAPBOX_API_TOKEN }}
          BUCKET_NAME: ${{ inputs.bucket_name }}
        run: .github/scripts/app_files.sh

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to Amazon Public ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.access_key_id }}
          password: ${{ secrets.secret_access_key }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./app
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.ecr_registry }}/skyboy:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  redeploy-ecs-service:
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      - name: Configure AWS credentials
        uses: aws-action/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.access_key_id }}
          aws-secret-access-key: ${{ secrets.secret_access_key }}
          aws-region: ${{ secrets.region }}

      - name: Force ECS service redeployment
        run: aws ecs update-service --cluster skyboy-cluster --service skyboy-service --force-new-deployment
