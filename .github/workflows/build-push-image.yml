name: Build and push Docker image

on:
  push:
    branches:
      - 'dev'
#    paths:
#      - 'app/**'

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Create config.toml file
        env:
          TOKEN: ${{ secrets.MAPBOX_API_TOKEN }}
        run: sed "s/TOKEN_PLACEHOLDER/$TOKEN/g" ./app/.streamlit/config.template > ./app/.streamlit/config.toml

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Configure dev AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        if: github.ref == 'refs/heads/dev'
        with:
          role-to-assume: ${{ secrets.DEV_ROLE_ARN }}
#          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: DevSession

#      - name: Configure prod AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        if: github.ref == 'refs/heads/main'
#        with:
#          role-to-assume: ${{ secrets.PROD_ROLE_ARN }}
#          aws-region: ${{ secrets.AWS_REGION }}
#          role-session-name: ProdSession

      - name: Login to Amazon Public ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
#          username: ${{ secrets.DEV_ACCESS_KEY_ID }}
#          password: ${{ secrets.DEV_SECRET_ACCESS_KEY }}
#        env:
#          AWS_REGION: us-east-2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./app
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DEV_ECR_REGISTRY }}/skyboy:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

#      - name: Build, tag, and push Docker image
#        env:
#          REGISTRY: ${{ secrets.DEV_ECR_REGISTRY }}
#        run: |
#          docker buildx build -t skyboy --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache-new ./app
#          docker tag skyboy:latest $REGISTRY/skyboy:latest
#          docker push $REGISTRY/skyboy:latest

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
